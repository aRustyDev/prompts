# Monthly Audit Automation Configuration
---
name: Monthly Repository Audit
description: Automated monthly audit to track repository health and prevent debt accumulation

schedule:
  # Run on the first day of each month at 2 AM
  - cron: "0 2 1 * *"
  # Also allow manual triggers
  manual_trigger: true

tasks:
  # Pre-audit setup
  - name: Initialize Audit Environment
    description: Set up directories and baseline
    actions:
      - create_directory: .claude/metrics/monthly
      - create_timestamp: AUDIT_TIMESTAMP
      - load_baseline: .claude/metrics/baseline.json

  # Main audit execution
  - name: Run Comprehensive Audit
    description: Execute full repository audit
    command: |
      /audit --depth full \
             --output .claude/metrics/monthly/${AUDIT_TIMESTAMP}.json \
             --format json
    timeout: 300
    capture_output: true

  # Metrics collection
  - name: Collect Metrics
    description: Gather key performance indicators
    actions:
      - count_files:
          pattern: "*.md"
          output: total_modules
      - count_empty_files:
          pattern: "*.md"
          output: empty_modules
      - calculate_average_size:
          pattern: "*.md"
          output: avg_module_size
      - count_circular_deps:
          output: circular_dependencies
      - count_missing_deps:
          output: missing_dependencies

  # Trend analysis
  - name: Analyze Trends
    description: Compare with previous months
    command: |
      python3 .claude/automation/trend_analyzer.py \
              --current .claude/metrics/monthly/${AUDIT_TIMESTAMP}.json \
              --baseline .claude/metrics/baseline.json \
              --output .claude/metrics/trends.json

  # Report generation
  - name: Generate Reports
    description: Create human-readable reports
    actions:
      - generate_markdown_report:
          template: .claude/automation/templates/monthly-report.md
          output: .claude/reports/monthly/${AUDIT_TIMESTAMP}.md
      - generate_dashboard:
          output: .claude/metrics/dashboard.md
      - generate_summary:
          output: .claude/reports/summary-${AUDIT_TIMESTAMP}.txt

  # Issue creation
  - name: Create GitHub Issues
    description: Auto-create issues for problems found
    condition: findings.critical > 0 or findings.high > 5
    command: |
      .claude/automation/create-issues-from-audit.sh \
              --audit-file .claude/metrics/monthly/${AUDIT_TIMESTAMP}.json \
              --threshold high

  # Notifications
  - name: Send Notifications
    description: Notify team of audit results
    actions:
      - slack_notification:
          channel: "#claude-health"
          template: audit_complete
      - email_summary:
          to: "team@example.com"
          subject: "Monthly Claude Audit - ${AUDIT_TIMESTAMP}"

  # Cleanup
  - name: Archive Old Audits
    description: Move old audits to archive
    actions:
      - archive_files:
          older_than: 90d
          from: .claude/metrics/monthly
          to: .claude/archive/audits

# Configuration
config:
  # Thresholds for issue creation
  issue_thresholds:
    critical: 1    # Create issue for any critical finding
    high: 5        # Create issue if more than 5 high findings
    medium: 20     # Create issue if more than 20 medium findings
  
  # Metrics to track
  tracked_metrics:
    - total_modules
    - empty_modules
    - average_module_size
    - circular_dependencies
    - missing_dependencies
    - duplicate_files
    - oversized_modules
    - test_coverage
    - documentation_coverage
  
  # Notification settings
  notifications:
    slack:
      webhook_url: "${SLACK_WEBHOOK_URL}"
      enabled: true
    email:
      smtp_server: "${SMTP_SERVER}"
      enabled: false

# Error handling
on_error:
  - log_error: .claude/logs/audit-errors.log
  - send_alert:
      to: "admin@example.com"
      subject: "Monthly Audit Failed"
  - retry:
      max_attempts: 3
      delay: 3600  # 1 hour